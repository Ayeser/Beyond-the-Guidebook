{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matth\\\\Coding_Projects\\\\GroupProject3\\\\client\\\\src\\\\pages\\\\AllCountries.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport CountryJumbotron from \"../components/CountryJumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nfunction CountryPage() {\n  const [countries, setCountries] = useState();\n  const [singleCountry, setCountry] = useState({});\n  const [formObject, setFormObject] = useState({\n    place: 'United States of America'\n  });\n  useEffect(() => {\n    loadCountries();\n    switchCountry(formObject.place);\n  });\n\n  function loadCountries() {\n    API.getCountries().then(res => {\n      setCountries(res.data);\n    }).catch(err => console.log(err));\n  }\n\n  ;\n\n  function switchCountry(name) {\n    API.switchCountry(name).then(res => setCountry(res.data[0])).catch(err => console.log(err));\n  }\n\n  function handleInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormObject({ ...formObject,\n      [name]: value\n    });\n  }\n\n  ;\n\n  function handleFormSubmitAdvice(event) {\n    event.preventDefault();\n    console.log(\"Form submitted and your advice is: \" + event.target); //        Would need to add place to the api call below so comments can be retrieved later by place\n    //    HAVE NOT SET UP ROUTES FOR THESE YET\n    //   API.saveComment({\n    //     person: formObject.author,\n    //     advice: formObject.comment\n    //   })\n    //   //change next line eventually to loadComments()\n    //     .then(res => loadCountries())\n    //     .catch(err => console.log(err));\n    // }\n  }\n\n  ;\n\n  function handleFormSubmitQuestion(event) {\n    event.preventDefault();\n    console.log(\"Form submitted!\"); //        Would need to add place to the api call below so comments can be retrieved later by place\n    //    HAVE NOT SET UP ROUTES FOR THESE YET\n    //   API.saveQuestion({\n    //     person: formObject.questioner,\n    //     question: formObject.question\n    //   })\n    //   //change next line eventually to loadComments()\n    //     .then(res => console.log(\"Question is...\"))\n    //     .catch(err => console.log(err));\n    // }\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(CountryJumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, singleCountry.name), /*#__PURE__*/React.createElement(\"img\", {\n    src: singleCountry.profilePicture,\n    alt: \"Country Flag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-2 sm-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onChange: handleInputChange,\n    name: \"place\",\n    placeholder: \"Country\",\n    onKeyPress: event => {\n      if (event.key === 'Enter') {\n        console.log(\"Enter key was hit!\");\n        switchCountry(formObject.place);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 3\n    }\n  })), countries && countries.length > 0 ? /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, countries.map(country => /*#__PURE__*/React.createElement(ListItem, {\n    key: country.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/countries/\" + country.name,\n    onClick: () => switchCountry(country.name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 23\n    }\n  }, country.name))))) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, \"No Results to Display\")), /*#__PURE__*/React.createElement(Col, {\n    size: \"md-10 sm-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-5 sm-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, \"Culture Box #1\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, singleCountry.culture))), /*#__PURE__*/React.createElement(Col, {\n    size: \"md-5 sm-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, \"Culture Box #2\"), singleCountry.description))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-5 sm-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, \"Culture Box #3\"))), /*#__PURE__*/React.createElement(Col, {\n    size: \"md-5 sm-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, \"Culture Box #4\")))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md=5 sm-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, \"What \\\"beyond the guidebook\\\" advice can you offer a prospective traveller to this country?\"), /*#__PURE__*/React.createElement(Input, {\n    onChange: handleInputChange,\n    name: \"author\",\n    placeholder: \"Author (required)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextArea, {\n    onChange: handleInputChange,\n    name: \"comment\",\n    placeholder: \"Comment would go here\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormBtn, {\n    disabled: !(formObject.author && formObject.comment),\n    onClick: handleFormSubmitAdvice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }, \"Submit Comment\")), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, \"Comments will populate here soon\")), /*#__PURE__*/React.createElement(Col, {\n    size: \"md=5 sm-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, \"Have any questions about the culture of this country?\"), /*#__PURE__*/React.createElement(Input, {\n    onChange: handleInputChange,\n    name: \"questioner\",\n    placeholder: \"Author (required)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextArea, {\n    onChange: handleInputChange,\n    name: \"question\",\n    placeholder: \"Question here\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormBtn, {\n    disabled: !(formObject.questioner && formObject.question),\n    onClick: handleFormSubmitQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 15\n    }\n  }, \"Submit Comment\")), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, \"Questions will populate here soon\"))))));\n}\n\nexport default CountryPage;","map":{"version":3,"sources":["C:/Users/Matth/Coding_Projects/GroupProject3/client/src/pages/AllCountries.js"],"names":["React","useState","useEffect","Jumbotron","CountryJumbotron","API","Link","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","CountryPage","countries","setCountries","singleCountry","setCountry","formObject","setFormObject","place","loadCountries","switchCountry","getCountries","then","res","data","catch","err","console","log","name","handleInputChange","event","value","target","handleFormSubmitAdvice","preventDefault","handleFormSubmitQuestion","profilePicture","key","length","map","country","culture","description","author","comment","questioner","question"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport CountryJumbotron from \"../components/CountryJumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nfunction CountryPage() {\n  const [countries, setCountries] = useState()\n  const [singleCountry, setCountry] = useState({})\n  const [formObject, setFormObject] = useState({place: 'United States of America'})\n\n  useEffect(() => {\n    loadCountries();\n    switchCountry(formObject.place);\n  })\n\n  function loadCountries() {\n    API.getCountries()\n      .then(res => \n        {\n        setCountries(res.data)\n        }\n      )\n      .catch(err => console.log(err));\n  };\n\n  function switchCountry(name) {\n    API.switchCountry(name)\n      .then(res => setCountry(res.data[0]))\n      .catch(err => console.log(err));\n  }\n\n  function handleInputChange(event) {\n    const { name, value } = event.target;\n    setFormObject({...formObject, [name]: value})\n  };\n\n  function handleFormSubmitAdvice(event) {\n    event.preventDefault();\n    console.log(\"Form submitted and your advice is: \" + event.target);\n      //        Would need to add place to the api call below so comments can be retrieved later by place\n      //    HAVE NOT SET UP ROUTES FOR THESE YET\n    //   API.saveComment({\n    //     person: formObject.author,\n    //     advice: formObject.comment\n    //   })\n    //   //change next line eventually to loadComments()\n    //     .then(res => loadCountries())\n    //     .catch(err => console.log(err));\n    // }\n  };\n\n  function handleFormSubmitQuestion(event) {\n    event.preventDefault();\n    console.log(\"Form submitted!\");\n    //        Would need to add place to the api call below so comments can be retrieved later by place\n     //    HAVE NOT SET UP ROUTES FOR THESE YET\n    //   API.saveQuestion({\n    //     person: formObject.questioner,\n    //     question: formObject.question\n    //   })\n    //   //change next line eventually to loadComments()\n    //     .then(res => console.log(\"Question is...\"))\n    //     .catch(err => console.log(err));\n    // }\n  };\n\n    return (\n      <Container fluid>\n<Row>\n<CountryJumbotron>\n              <h1>{singleCountry.name}</h1>\n              <img src={singleCountry.profilePicture} alt=\"Country Flag\" />\n            </CountryJumbotron>\n  </Row>\n  <Row>\n          <Col size=\"md-2 sm-4\">\n<form>\n  <Input\n                onChange={handleInputChange}\n                name=\"place\"\n                placeholder=\"Country\"\n                onKeyPress={event => {\n                  if (event.key === 'Enter') {\n                    console.log(\"Enter key was hit!\");\n                    switchCountry(formObject.place);\n                  }\n                }}\n              />\n              </form>\n          \n            {countries && countries.length  > 0 ? (\n              <List>\n                {countries.map(country => (\n                  <ListItem key={country.name}>\n                    <Link to={\"/countries/\" + country.name} onClick={() => switchCountry(country.name)}>\n                      <strong>\n                        {country.name}\n                      </strong>\n                    </Link>\n                  </ListItem>\n                ))}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n          </Col>\n<Col size=\"md-10 sm-8\">\n<Row>\n          <Col size=\"md-5 sm-8\">\n            <Jumbotron>\n              <h1>Culture Box #1</h1>\n              <p>{singleCountry.culture}</p>\n            </Jumbotron>\n            </Col><Col size=\"md-5 sm-8\">\n            <Jumbotron>\n              <h1>Culture Box #2</h1>\n              {singleCountry.description}\n            </Jumbotron>\n            </Col>\n            </Row>\n            <Row>\n            <Col size=\"md-5 sm-8\">\n            <Jumbotron>\n              <h1>Culture Box #3</h1>\n            </Jumbotron>\n            </Col>\n            <Col size=\"md-5 sm-8\">\n            <Jumbotron>\n              <h1>Culture Box #4</h1>\n            </Jumbotron>\n            </Col>\n            </Row>\n            <Row>\n              <Col size=\"md=5 sm-8\">\n            <form>\n            <h2>What \"beyond the guidebook\" advice can you offer a prospective traveller to this country?</h2>\n              <Input\n                onChange={handleInputChange}\n                name=\"author\"\n                placeholder=\"Author (required)\"\n\n              />\n              <TextArea\n                onChange={handleInputChange}\n                name=\"comment\"\n                placeholder=\"Comment would go here\"\n              />\n              <FormBtn\n                disabled={!(formObject.author && formObject.comment)}\n                onClick={handleFormSubmitAdvice}\n              >\n                Submit Comment\n              </FormBtn>\n            </form>\n            <h3>Comments will populate here soon</h3>\n            </Col>\n            <Col size=\"md=5 sm-8\">\n            <form>\n            <h2>Have any questions about the culture of this country?</h2>\n              <Input\n                onChange={handleInputChange}\n                name=\"questioner\"\n                placeholder=\"Author (required)\"\n\n              />\n              <TextArea\n                onChange={handleInputChange}\n                name=\"question\"\n                placeholder=\"Question here\"\n              />\n              <FormBtn\n                disabled={!(formObject.questioner && formObject.question)}\n                onClick={handleFormSubmitQuestion}\n              >\n                Submit Comment\n              </FormBtn>\n            </form>\n            <h3>Questions will populate here soon</h3>\n            </Col>\n            </Row>\n</Col>\n          </Row> \n      </Container>\n    );\n  }\n\n\nexport default CountryPage;\n"]},"metadata":{},"sourceType":"module"}