{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matth\\\\Coding_Projects\\\\GroupProject3\\\\client\\\\src\\\\components\\\\MapChart\\\\index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { csv } from \"d3-fetch\";\nimport { scaleLinear } from \"d3-scale\";\nimport { ComposableMap, Geographies, Geography, Sphere, Graticule } from \"react-simple-maps\";\n\nfunction MapChart({\n  children\n}) {\n  {\n    children;\n  }\n  const geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n  const colorScale = scaleLinear().domain([0.29, 0.68]).range([\"#ffedea\", \"#ff5233\"]);\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    csv(`/vulnerability.csv`).then(data => {\n      setData(data);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ComposableMap, {\n    projectionConfig: {\n      rotate: [-10, 0, 0],\n      scale: 147\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Sphere, {\n    stroke: \"#E4E5E6\",\n    strokeWidth: 0.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Graticule, {\n    stroke: \"#E4E5E6\",\n    strokeWidth: 0.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), data.length > 0 && /*#__PURE__*/React.createElement(Geographies, {\n    geography: geoUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, ({\n    geographies\n  }) => geographies.map(geo => {\n    const d = data.find(s => s.ISO3 === geo.properties.ISO_A3);\n    return /*#__PURE__*/React.createElement(Geography, {\n      key: geo.rsmKey,\n      geography: geo,\n      fill: d ? colorScale(d[\"2017\"]) : \"#F5F4F6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    });\n  }))), \");\");\n}\n\n;\nexport default MapChart;","map":{"version":3,"sources":["C:/Users/Matth/Coding_Projects/GroupProject3/client/src/components/MapChart/index.js"],"names":["React","useEffect","useState","csv","scaleLinear","ComposableMap","Geographies","Geography","Sphere","Graticule","MapChart","children","geoUrl","colorScale","domain","range","data","setData","then","rotate","scale","length","geographies","map","geo","d","find","s","ISO3","properties","ISO_A3","rsmKey"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,QAAoB,UAApB;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,SACEC,aADF,EAEEC,WAFF,EAGEC,SAHF,EAIEC,MAJF,EAKEC,SALF,QAMO,mBANP;;AAQE,SAASC,QAAT,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAA8B;AAC5B;AAACA,IAAAA,QAAQ;AAAC;AACV,QAAMC,MAAM,GACZ,wGADA;AAGA,QAAMC,UAAU,GAAGT,WAAW,GAC7BU,MADkB,CACX,CAAC,IAAD,EAAO,IAAP,CADW,EAElBC,KAFkB,CAEZ,CAAC,SAAD,EAAY,SAAZ,CAFY,CAAnB;AAIA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,GAAG,CAAE,oBAAF,CAAH,CAA0Be,IAA1B,CAA+BF,IAAI,IAAI;AACrCC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAOA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AACJ,IAAA,gBAAgB,EAAE;AAChBG,MAAAA,MAAM,EAAE,CAAC,CAAC,EAAF,EAAM,CAAN,EAAS,CAAT,CADQ;AAEhBC,MAAAA,KAAK,EAAE;AAFS,KADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMJ,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAC,SAAf;AAAyB,IAAA,WAAW,EAAE,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANI,eAOJ,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAC,SAAlB;AAA4B,IAAA,WAAW,EAAE,GAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPI,EAQHJ,IAAI,CAACK,MAAL,GAAc,CAAd,iBACC,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAET,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEU,IAAAA;AAAF,GAAD,KACCA,WAAW,CAACC,GAAZ,CAAgBC,GAAG,IAAI;AACrB,UAAMC,CAAC,GAAGT,IAAI,CAACU,IAAL,CAAUC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAWJ,GAAG,CAACK,UAAJ,CAAeC,MAAzC,CAAV;AACA,wBACE,oBAAC,SAAD;AACE,MAAA,GAAG,EAAEN,GAAG,CAACO,MADX;AAEE,MAAA,SAAS,EAAEP,GAFb;AAGE,MAAA,IAAI,EAAEC,CAAC,GAAGZ,UAAU,CAACY,CAAC,CAAC,MAAD,CAAF,CAAb,GAA2B,SAHpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD,GATD,CAFJ,CATE,CADF,OADJ;AA6BA;;AAAA;AAEJ,eAAef,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { csv } from \"d3-fetch\";\r\nimport { scaleLinear } from \"d3-scale\";\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Sphere,\r\n  Graticule\r\n} from \"react-simple-maps\";\r\n\r\n  function MapChart({children}) {\r\n    {children}\r\n    const geoUrl =\r\n    \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n    \r\n    const colorScale = scaleLinear()\r\n    .domain([0.29, 0.68])\r\n    .range([\"#ffedea\", \"#ff5233\"]);\r\n  \r\n    const [data, setData] = useState([]);\r\n  \r\n    useEffect(() => {\r\n      csv(`/vulnerability.csv`).then(data => {\r\n        setData(data);\r\n      });\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div>\r\n          <ComposableMap\r\n      projectionConfig={{\r\n        rotate: [-10, 0, 0],\r\n        scale: 147\r\n      }}\r\n    >\r\n      <Sphere stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n      <Graticule stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n      {data.length > 0 && (\r\n        <Geographies geography={geoUrl}>\r\n          {({ geographies }) =>\r\n            geographies.map(geo => {\r\n              const d = data.find(s => s.ISO3 === geo.properties.ISO_A3);\r\n              return (\r\n                <Geography\r\n                  key={geo.rsmKey}\r\n                  geography={geo}\r\n                  fill={d ? colorScale(d[\"2017\"]) : \"#F5F4F6\"}\r\n                />\r\n              );\r\n            })\r\n        }\r\n        </Geographies>\r\n      )}\r\n    </ComposableMap>\r\n  );\r\n        </div>\r\n  )};\r\n\r\nexport default MapChart;"]},"metadata":{},"sourceType":"module"}