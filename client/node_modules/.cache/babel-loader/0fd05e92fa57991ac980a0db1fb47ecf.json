{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matth\\\\Coding_Projects\\\\GroupProject3\\\\client\\\\src\\\\pages\\\\SpecificCountryPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport CountrySwitchBtn from \"../components/CountrySwitchBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport CountryJumbotron from \"../components/CountryJumbotron\";\nimport API from \"../utils/API\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nfunction SpecificCountry(props) {\n  const [specificCountry, setCountry] = useState({});\n  const {\n    name\n  } = useParams();\n  useEffect(() => {\n    API.switchCountry(name).then(res => setCountry(res.data)).catch(err => console.log(err));\n    console.log(name);\n  }, []);\n  const [countries, setCountries] = useState([]);\n  const [formObject, setFormObject] = useState({});\n  useEffect(() => {\n    loadCountries();\n  }, []);\n\n  function loadCountries() {\n    API.getCountries().then(res => setCountries(res.data)).catch(err => console.log(err));\n  }\n\n  ;\n\n  function switchCountry(name) {\n    console.log(name);\n    API.switchCountry(name).then(res => setCountry(res.data)).catch(err => console.log(err));\n    console.log(specificCountry);\n  }\n\n  function handleInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormObject({ ...formObject,\n      [name]: value\n    });\n  }\n\n  ;\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    console.log(\"Form submitted!\"); // if (formObject.name && formObject.author) {\n    //   API.saveComment({\n    //     author: formObject.author,\n    //     synopsis: formObject.comment\n    //   })\n    //   //change next line eventually to loadComments()\n    //     .then(res => loadCountries())\n    //     .catch(err => console.log(err));\n    // }\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-6 sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CountryJumbotron, {\n    style: {\n      backgroundImage: \"url(\" + {\n        profilePicture\n      } + \")\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 23\n    }\n  }, name)), countries.length ? /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 23\n    }\n  }, countries.map(country => /*#__PURE__*/React.createElement(ListItem, {\n    key: country.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/countries/\" + country.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 31\n    }\n  }, country.name)), /*#__PURE__*/React.createElement(CountrySwitchBtn, {\n    onClick: () => switchCountry(country.name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  })))) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 23\n    }\n  }, \"No Results to Display\")), /*#__PURE__*/React.createElement(Col, {\n    size: \"md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 23\n    }\n  }, \"What advice would you give about visiting this culture?\")), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onChange: handleInputChange,\n    name: \"author\",\n    placeholder: \"Author (required)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(TextArea, {\n    onChange: handleInputChange,\n    name: \"comment\",\n    placeholder: \"Comment would go here\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(FormBtn, {\n    disabled: !(formObject.author && formObject.title),\n    onClick: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 23\n    }\n  }, \"Submit Comment\")))));\n}\n\nexport default SpecificCountry;","map":{"version":3,"sources":["C:/Users/Matth/Coding_Projects/GroupProject3/client/src/pages/SpecificCountryPage.js"],"names":["React","useState","useEffect","CountrySwitchBtn","Jumbotron","CountryJumbotron","API","Link","useParams","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","SpecificCountry","props","specificCountry","setCountry","name","switchCountry","then","res","data","catch","err","console","log","countries","setCountries","formObject","setFormObject","loadCountries","getCountries","handleInputChange","event","value","target","handleFormSubmit","preventDefault","backgroundImage","profilePicture","length","map","country","author","title"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport CountrySwitchBtn from \"../components/CountrySwitchBtn\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport CountryJumbotron from \"../components/CountryJumbotron\";\r\nimport API from \"../utils/API\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { List, ListItem } from \"../components/List\";\r\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\r\n\r\nfunction SpecificCountry(props) {\r\n    const [specificCountry, setCountry] = useState({})\r\n    const {name} = useParams();\r\n    useEffect(() => {\r\n        API.switchCountry(name)\r\n        .then(res => setCountry(res.data))\r\n        .catch(err => console.log(err));\r\n        console.log(name);\r\n    }, [])\r\n\r\n    const [countries, setCountries] = useState([])\r\n    const [formObject, setFormObject] = useState({})\r\n  \r\n    useEffect(() => {\r\n      loadCountries()\r\n    }, [])\r\n  \r\n    function loadCountries() {\r\n      API.getCountries()\r\n        .then(res => \r\n          setCountries(res.data)\r\n        )\r\n        .catch(err => console.log(err));\r\n    };\r\n  \r\n    function switchCountry(name) {\r\n      console.log(name);\r\n      API.switchCountry(name)\r\n        .then(res => setCountry(res.data))\r\n        .catch(err => console.log(err));\r\n      console.log(specificCountry);\r\n    }\r\n  \r\n    function handleInputChange(event) {\r\n      const { name, value } = event.target;\r\n      setFormObject({...formObject, [name]: value})\r\n    };\r\n  \r\n    function handleFormSubmit(event) {\r\n      event.preventDefault();\r\n      console.log(\"Form submitted!\");\r\n      // if (formObject.name && formObject.author) {\r\n      //   API.saveComment({\r\n      //     author: formObject.author,\r\n      //     synopsis: formObject.comment\r\n      //   })\r\n      //   //change next line eventually to loadComments()\r\n      //     .then(res => loadCountries())\r\n      //     .catch(err => console.log(err));\r\n      // }\r\n    };\r\n\r\n    return (\r\n        <Container fluid>\r\n        <Row>\r\n                  <Col size=\"md-6 sm-12\">\r\n                    <CountryJumbotron style={{backgroundImage: \"url(\" + {profilePicture} + \")\"}}>\r\n                      <h1>{name}</h1>\r\n                    </CountryJumbotron>\r\n                    {countries.length ? (\r\n                      <List>\r\n                        {countries.map(country => (\r\n                          <ListItem key={country.name}>\r\n                            <Link to={\"/countries/\" + country.name}>\r\n                              <strong>\r\n                                {country.name}\r\n                              </strong>\r\n                            </Link>\r\n                            <CountrySwitchBtn onClick={() => switchCountry(country.name)} />\r\n                          </ListItem>\r\n                        ))}\r\n                      </List>\r\n                    ) : (\r\n                      <h3>No Results to Display</h3>\r\n                    )}\r\n                  </Col>\r\n                  <Col size=\"md-6\">\r\n                    <Jumbotron>\r\n                      <h1>What advice would you give about visiting this culture?</h1>\r\n                    </Jumbotron>\r\n                    <form>\r\n                      <Input\r\n                        onChange={handleInputChange}\r\n                        name=\"author\"\r\n                        placeholder=\"Author (required)\"\r\n                      />\r\n                      <TextArea\r\n                        onChange={handleInputChange}\r\n                        name=\"comment\"\r\n                        placeholder=\"Comment would go here\"\r\n                      />\r\n                      <FormBtn\r\n                        disabled={!(formObject.author && formObject.title)}\r\n                        onClick={handleFormSubmit}\r\n                      >\r\n                        Submit Comment\r\n                      </FormBtn>\r\n                    </form>\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            );\r\n          }\r\n        \r\n        \r\n        export default SpecificCountry;"]},"metadata":{},"sourceType":"module"}