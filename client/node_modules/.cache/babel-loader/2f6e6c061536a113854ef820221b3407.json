{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matth\\\\Coding_Projects\\\\GroupProject3\\\\client\\\\src\\\\components\\\\MapChart\\\\index.js\";\nimport React, { useEffect, useState } from \"react\"; // import { csv } from \"d3-fetch\";\n\nimport { scaleLinear } from \"d3-scale\";\nimport { ComposableMap, Geographies, Geography, Sphere, Graticule } from \"react-simple-maps\";\n\nfunction MapChart({\n  children\n}) {\n  const geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n  const colorScale = scaleLinear().domain([0.29, 0.68]).range([\"#ffedea\", \"#ff5233\"]);\n  const [data, setData] = useState([]); // useEffect(() => {\n  //   csv(`/vulnerability.csv`).then(data => {\n  //     setData(data);\n  //   });\n  // }, []);\n\n  useEffect(() => {\n    setData([\"ISO3\", \"Name\", \"1995\", \"1996\", \"1997\", \"1998\", \"1999\", \"2000\", \"2001\", \"2002\", \"2003\", \"2004\", \"2005\", \"2006\", \"2007\", \"2008\", \"2009\", \"2010\", \"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\", \"2017\", \"AFG\", \"Afghanistan\", 0.62661390602871, 0.626082651113839, 0.625533963052386, 0.622996434676949, 0.620404545570819, 0.617764377092254, 0.61547349852345, 0.611816411599054, 0.60785698474375, 0.606454444099422, 0.612019239441813, 0.622316660491437, 0.617279732896425, 0.613176537750965, 0.608469035767401, 0.607478943999863, 0.599746477142137, 0.595439009087657, 0.59382332888139, 0.596308129323559, 0.595428061222659, 0.595839794775052, 0.595266278675272]);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, children, /*#__PURE__*/React.createElement(ComposableMap, {\n    projectionConfig: {\n      rotate: [-10, 0, 0],\n      scale: 147\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Sphere, {\n    stroke: \"#E4E5E6\",\n    strokeWidth: 0.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Graticule, {\n    stroke: \"#E4E5E6\",\n    strokeWidth: 0.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), data.length > 0 && /*#__PURE__*/React.createElement(Geographies, {\n    geography: geoUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, ({\n    geographies\n  }) => geographies.map(geo => {\n    const d = data.find(s => s.ISO3 === geo.properties.ISO_A3);\n    return /*#__PURE__*/React.createElement(Geography, {\n      key: geo.rsmKey,\n      geography: geo,\n      fill: d ? colorScale(d[\"2017\"]) : \"#F5F4F6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    });\n  }))), \");\");\n}\n\n;\nexport default MapChart;","map":{"version":3,"sources":["C:/Users/Matth/Coding_Projects/GroupProject3/client/src/components/MapChart/index.js"],"names":["React","useEffect","useState","scaleLinear","ComposableMap","Geographies","Geography","Sphere","Graticule","MapChart","children","geoUrl","colorScale","domain","range","data","setData","rotate","scale","length","geographies","map","geo","d","find","s","ISO3","properties","ISO_A3","rsmKey"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,SACEC,aADF,EAEEC,WAFF,EAGEC,SAHF,EAIEC,MAJF,EAKEC,SALF,QAMO,mBANP;;AAQE,SAASC,QAAT,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAA8B;AAC5B,QAAMC,MAAM,GACZ,wGADA;AAGA,QAAMC,UAAU,GAAGT,WAAW,GAC7BU,MADkB,CACX,CAAC,IAAD,EAAO,IAAP,CADW,EAElBC,KAFkB,CAEZ,CAAC,SAAD,EAAY,SAAZ,CAFY,CAAnB;AAIA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC,CAR4B,CAU5B;AACA;AACA;AACA;AACA;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,OAAO,CAAC,CAAC,MAAD,EAAQ,MAAR,EAAe,MAAf,EAAsB,MAAtB,EAA6B,MAA7B,EAAoC,MAApC,EAA2C,MAA3C,EAAkD,MAAlD,EAAyD,MAAzD,EAAgE,MAAhE,EAAuE,MAAvE,EAA8E,MAA9E,EAAqF,MAArF,EAA4F,MAA5F,EAAmG,MAAnG,EAA0G,MAA1G,EAAiH,MAAjH,EAAwH,MAAxH,EAA+H,MAA/H,EAAsI,MAAtI,EAA6I,MAA7I,EAAoJ,MAApJ,EAA2J,MAA3J,EAAkK,MAAlK,EAAyK,MAAzK,EACR,KADQ,EACF,aADE,EACY,gBADZ,EAC6B,iBAD7B,EAC+C,iBAD/C,EACiE,iBADjE,EACmF,iBADnF,EACqG,iBADrG,EACuH,gBADvH,EACwI,iBADxI,EAC0J,gBAD1J,EAC2K,iBAD3K,EAC6L,iBAD7L,EAC+M,iBAD/M,EACiO,iBADjO,EACmP,iBADnP,EACqQ,iBADrQ,EACuR,iBADvR,EACyS,iBADzS,EAC2T,iBAD3T,EAC6U,gBAD7U,EAC8V,iBAD9V,EACgX,iBADhX,EACkY,iBADlY,EACoZ,iBADpZ,CAAD,CAAP;AAEH,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQN,QADR,eAEE,oBAAC,aAAD;AACJ,IAAA,gBAAgB,EAAE;AAChBO,MAAAA,MAAM,EAAE,CAAC,CAAC,EAAF,EAAM,CAAN,EAAS,CAAT,CADQ;AAEhBC,MAAAA,KAAK,EAAE;AAFS,KADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMJ,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAC,SAAf;AAAyB,IAAA,WAAW,EAAE,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANI,eAOJ,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAC,SAAlB;AAA4B,IAAA,WAAW,EAAE,GAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPI,EAQHH,IAAI,CAACI,MAAL,GAAc,CAAd,iBACC,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAER,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAES,IAAAA;AAAF,GAAD,KACCA,WAAW,CAACC,GAAZ,CAAgBC,GAAG,IAAI;AACrB,UAAMC,CAAC,GAAGR,IAAI,CAACS,IAAL,CAAUC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAWJ,GAAG,CAACK,UAAJ,CAAeC,MAAzC,CAAV;AACA,wBACE,oBAAC,SAAD;AACE,MAAA,GAAG,EAAEN,GAAG,CAACO,MADX;AAEE,MAAA,SAAS,EAAEP,GAFb;AAGE,MAAA,IAAI,EAAEC,CAAC,GAAGX,UAAU,CAACW,CAAC,CAAC,MAAD,CAAF,CAAb,GAA2B,SAHpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD,GATD,CAFJ,CATE,CAFF,OADJ;AA8BE;;AAAA;AAEN,eAAed,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n// import { csv } from \"d3-fetch\";\r\nimport { scaleLinear } from \"d3-scale\";\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Sphere,\r\n  Graticule\r\n} from \"react-simple-maps\";\r\n\r\n  function MapChart({children}) {\r\n    const geoUrl =\r\n    \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n    \r\n    const colorScale = scaleLinear()\r\n    .domain([0.29, 0.68])\r\n    .range([\"#ffedea\", \"#ff5233\"]);\r\n  \r\n    const [data, setData] = useState([]);\r\n  \r\n    // useEffect(() => {\r\n    //   csv(`/vulnerability.csv`).then(data => {\r\n    //     setData(data);\r\n    //   });\r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        setData([\"ISO3\",\"Name\",\"1995\",\"1996\",\"1997\",\"1998\",\"1999\",\"2000\",\"2001\",\"2002\",\"2003\",\"2004\",\"2005\",\"2006\",\"2007\",\"2008\",\"2009\",\"2010\",\"2011\",\"2012\",\"2013\",\"2014\",\"2015\",\"2016\",\"2017\",\r\n        \"AFG\",\"Afghanistan\",0.62661390602871,0.626082651113839,0.625533963052386,0.622996434676949,0.620404545570819,0.617764377092254,0.61547349852345,0.611816411599054,0.60785698474375,0.606454444099422,0.612019239441813,0.622316660491437,0.617279732896425,0.613176537750965,0.608469035767401,0.607478943999863,0.599746477142137,0.595439009087657,0.59382332888139,0.596308129323559,0.595428061222659,0.595839794775052,0.595266278675272]);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n               {children}\r\n          <ComposableMap\r\n      projectionConfig={{\r\n        rotate: [-10, 0, 0],\r\n        scale: 147\r\n      }}\r\n    >\r\n      <Sphere stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n      <Graticule stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n      {data.length > 0 && (\r\n        <Geographies geography={geoUrl}>\r\n          {({ geographies }) =>\r\n            geographies.map(geo => {\r\n              const d = data.find(s => s.ISO3 === geo.properties.ISO_A3);\r\n              return (\r\n                <Geography\r\n                  key={geo.rsmKey}\r\n                  geography={geo}\r\n                  fill={d ? colorScale(d[\"2017\"]) : \"#F5F4F6\"}\r\n                />\r\n              );\r\n            })\r\n        }\r\n        </Geographies>\r\n      )}\r\n    </ComposableMap>\r\n  );\r\n        </div>\r\n    )};\r\n\r\nexport default MapChart;"]},"metadata":{},"sourceType":"module"}